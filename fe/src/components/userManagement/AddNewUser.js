import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import '../../styles/addNewUser.css';
import SearchBar from '../common/SearchBar';
import Button from '../common/Button';
import OrganizationSelect from '../common/OrganizationSelect';

const AddNewUser = ({ onCancel }) => {
    const navigate = useNavigate();
    const [formData, setFormData] = useState({
        // Th√¥ng tin c√° nh√¢n
        fullName: '',
        email: '',
        birthDate: '',
        phone: '',
        organization: null,
        role: null,
        loginMethod: 'email', // email, phone, both
        accountStatus: 1, // 1 = Ho·∫°t ƒë·ªông, 0 = Kh√¥ng ho·∫°t ƒë·ªông
        
        // Th√¥ng tin ch·ªØ k√Ω
        smsSignatureImage: null,
        digitalSignatureImage: null,
        pkiPhone: '',
        pkiNetwork: null,
        showPhoneOnSignature: true,
        hsmProvider: null,
        hsmUuid: ''
    });

    // Sample data
    const organizations = [
        { id: 226, name: 'Trung t√¢m c√¥ng ngh·ªá th√¥ng tin MobiFone' },
        { id: 1215, name: 'TC230301' },
        { id: 1216, name: 'haitest1231' },
        { id: 1242, name: 'C√¥ng ty D·ªãch v·ª• MobiFone Khu v·ª±c 8' },
    ];

    const roles = [
        { id: 1, name: 'Admin' },
        { id: 2, name: 'Member' },
        { id: 3, name: 'Viewer' },
    ];

    const networks = [
        { id: 1, name: 'Viettel' },
        { id: 2, name: 'MobiFone' },
        { id: 3, name: 'Vinaphone' },
    ];

    const providers = [
        { id: 1, name: 'CA Viettel' },
        { id: 2, name: 'CA MobiFone' },
        { id: 3, name: 'CA Vinaphone' },
    ];

    const handleInputChange = (field, value) => {
        setFormData(prev => ({ ...prev, [field]: value }));
    };

    const handleImageUpload = (field, file) => {
        // Handle image upload logic here
        console.log(`Uploading ${field}:`, file);
        setFormData(prev => ({ ...prev, [field]: file }));
    };

    const handleSave = () => {
        // Validate required fields
        if (!formData.fullName || !formData.email || !formData.phone || !formData.organization || !formData.role) {
            alert('Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng b·∫Øt bu·ªôc (*)');
            return;
        }
        
        console.log('Saving user:', formData);
        // Implement save logic here
        onCancel && onCancel();
    };

    const handleCancel = () => {
        onCancel && onCancel();
    };

    return (
        <div className="user-management-container">
            

            <div className="add-user-content">
                {/* TH√îNG TIN C√Å NH√ÇN */}
                <div className="section">
                    <h2 className="section-title">TH√îNG TIN C√Å NH√ÇN</h2>
                    
                    <div className="form-grid">
                        <div className="form-group">
                            <label>H·ªç t√™n <span className="required">*</span></label>
                            <SearchBar 
                                placeholder="Nh·∫≠p h·ªç t√™n" 
                                value={formData.fullName} 
                                onChange={(value) => handleInputChange('fullName', value)} 
                            />
                        </div>
                        
                        <div className="form-group">
                            <label>Email <span className="required">*</span></label>
                            <SearchBar 
                                placeholder="Nh·∫≠p email" 
                                value={formData.email} 
                                onChange={(value) => handleInputChange('email', value)} 
                                type="email"
                            />
                        </div>
                        
                        <div className="form-group">
                            <label>Ng√†y sinh</label>
                            <div className="date-input-group">
                                <SearchBar 
                                    placeholder="dd/MM/yyyy" 
                                    value={formData.birthDate} 
                                    onChange={(value) => handleInputChange('birthDate', value)} 
                                />
                                <button type="button" className="calendar-btn">üìÖ</button>
                            </div>
                        </div>
                        
                        <div className="form-group">
                            <label>S·ªë ƒëi·ªán tho·∫°i <span className="required">*</span></label>
                            <SearchBar 
                                placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" 
                                value={formData.phone} 
                                onChange={(value) => handleInputChange('phone', value)} 
                            />
                        </div>
                        
                        <div className="form-group">
                            <label>T·ªï ch·ª©c <span className="required">*</span></label>
                            <OrganizationSelect
                                organizations={organizations}
                                value={formData.organization}
                                onChange={(org) => handleInputChange('organization', org?.id)}
                                placeholder="Ch·ªçn t·ªï ch·ª©c"
                                searchPlaceholder="T√¨m ki·∫øm t·ªï ch·ª©c..."
                            />
                        </div>
                        
                        <div className="form-group">
                            <label>Vai tr√≤ <span className="required">*</span></label>
                            <OrganizationSelect
                                organizations={roles}
                                value={formData.role}
                                onChange={(role) => handleInputChange('role', role?.id)}
                                placeholder="Ch·ªçn vai tr√≤"
                                searchPlaceholder="T√¨m ki·∫øm vai tr√≤..."
                            />
                        </div>
                    </div>

                    <div className="radio-sections">
                        <div className="radio-section">
                            <label className="radio-section-label">Ch·ªçn h√¨nh th·ª©c ƒëƒÉng nh·∫≠p:</label>
                            <div className="radio-group">
                                <label className="radio-item">
                                    <input 
                                        type="radio" 
                                        name="loginMethod" 
                                        value="email" 
                                        checked={formData.loginMethod === 'email'}
                                        onChange={(e) => handleInputChange('loginMethod', e.target.value)}
                                    />
                                    <span>ƒêƒÉng nh·∫≠p b·∫±ng email</span>
                                </label>
                                <label className="radio-item">
                                    <input 
                                        type="radio" 
                                        name="loginMethod" 
                                        value="phone" 
                                        checked={formData.loginMethod === 'phone'}
                                        onChange={(e) => handleInputChange('loginMethod', e.target.value)}
                                    />
                                    <span>ƒêƒÉng nh·∫≠p b·∫±ng s·ªë ƒëi·ªán tho·∫°i</span>
                                </label>
                                <label className="radio-item">
                                    <input 
                                        type="radio" 
                                        name="loginMethod" 
                                        value="both" 
                                        checked={formData.loginMethod === 'both'}
                                        onChange={(e) => handleInputChange('loginMethod', e.target.value)}
                                    />
                                    <span>ƒêƒÉng nh·∫≠p b·∫±ng Email v√† SƒêT</span>
                                </label>
                            </div>
                        </div>

                        <div className="radio-section">
                            <label className="radio-section-label">Tr·∫°ng th√°i t√†i kho·∫£n:</label>
                            <div className="radio-group">
                                <label className="radio-item">
                                    <input 
                                        type="radio" 
                                        name="accountStatus" 
                                        value="1" 
                                        checked={formData.accountStatus === 1}
                                        onChange={(e) => handleInputChange('accountStatus', parseInt(e.target.value))}
                                    />
                                    <span>Ho·∫°t ƒë·ªông</span>
                                </label>
                                <label className="radio-item">
                                    <input 
                                        type="radio" 
                                        name="accountStatus" 
                                        value="0" 
                                        checked={formData.accountStatus === 0}
                                        onChange={(e) => handleInputChange('accountStatus', parseInt(e.target.value))}
                                    />
                                    <span>Kh√¥ng ho·∫°t ƒë·ªông</span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                {/* TH√îNG TIN CH·ªÆ K√ù */}
                <div className="section">
                    <h2 className="section-title">TH√îNG TIN CH·ªÆ K√ù</h2>
                    
                    <div className="signature-grid">
                        {/* H√åNH ·∫¢NH CH·ªÆ K√ù H√åNH TH·ª®C SMS OTP - 25% */}
                        <div className="signature-column">
                            <h3 className="signature-subtitle">H√åNH ·∫¢NH CH·ªÆ K√ù H√åNH TH·ª®C SMS OTP</h3>
                            <div className="image-upload-area">
                                <button 
                                    type="button" 
                                    className="upload-btn"
                                    onClick={() => document.getElementById('sms-signature').click()}
                                >
                                    T·∫£i ·∫£nh l√™n
                                </button>
                                <input 
                                    type="file" 
                                    id="sms-signature" 
                                    accept="image/*" 
                                    style={{ display: 'none' }}
                                    onChange={(e) => handleImageUpload('smsSignatureImage', e.target.files[0])}
                                />
                                <p className="upload-instruction">
                                    Vui l√≤ng t·∫£i l√™n ·∫£nh ch·ªØ k√Ω/ con d·∫•u ƒë√£ ƒë∆∞·ª£c t√°ch n·ªÅn (PNG) ƒë·ªÉ ƒë·∫£m b·∫£o hi·ªÉn th·ªã ch√≠nh x√°c v√† chuy√™n nghi·ªáp tr√™n t√†i li·ªáu/ h·ª£p ƒë·ªìng!
                                </p>
                            </div>
                        </div>

                        {/* H√åNH ·∫¢NH CH·ªÆ K√ù/CON D·∫§U K√ù S·ªê - 25% */}
                        <div className="signature-column">
                            <h3 className="signature-subtitle">H√åNH ·∫¢NH CH·ªÆ K√ù/CON D·∫§U K√ù S·ªê</h3>
                            <div className="image-upload-area">
                                <button 
                                    type="button" 
                                    className="upload-btn"
                                    onClick={() => document.getElementById('digital-signature').click()}
                                >
                                    T·∫£i ·∫£nh l√™n
                                </button>
                                <input 
                                    type="file" 
                                    id="digital-signature" 
                                    accept="image/*" 
                                    style={{ display: 'none' }}
                                    onChange={(e) => handleImageUpload('digitalSignatureImage', e.target.files[0])}
                                />
                                <p className="upload-instruction">
                                    Vui l√≤ng t·∫£i l√™n ·∫£nh ch·ªØ k√Ω/ con d·∫•u ƒë√£ ƒë∆∞·ª£c t√°ch n·ªÅn (PNG) ƒë·ªÉ ƒë·∫£m b·∫£o hi·ªÉn th·ªã ch√≠nh x√°c v√† chuy√™n nghi·ªáp tr√™n t√†i li·ªáu/ h·ª£p ƒë·ªìng!
                                </p>
                            </div>
                        </div>

                        {/* CH·ªÆ K√ù PKI - 25% */}
                        <div className="signature-column">
                            <h3 className="signature-subtitle">CH·ªÆ K√ù PKI</h3>
                            <div className="signature-form">
                                <div className="form-group">
                                    <label>S·ªë ƒëi·ªán tho·∫°i</label>
                                    <SearchBar 
                                        placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" 
                                        value={formData.pkiPhone} 
                                        onChange={(value) => handleInputChange('pkiPhone', value)} 
                                    />
                                </div>
                                <div className="form-group">
                                    <label>Nh√† m·∫°ng</label>
                                    <OrganizationSelect
                                        organizations={networks}
                                        value={formData.pkiNetwork}
                                        onChange={(network) => handleInputChange('pkiNetwork', network?.id)}
                                        placeholder="Ch·ªçn nh√† m·∫°ng"
                                        searchPlaceholder="T√¨m ki·∫øm nh√† m·∫°ng..."
                                    />
                                </div>
                                <div className="checkbox-group">
                                    <label className="checkbox-item">
                                        <input 
                                            type="checkbox" 
                                            checked={formData.showPhoneOnSignature}
                                            onChange={(e) => handleInputChange('showPhoneOnSignature', e.target.checked)}
                                        />
                                        <span>Cho ph√©p hi·ªÉn th·ªã th√¥ng tin SƒêT l√™n ch·ªØ k√Ω</span>
                                    </label>
                                </div>
                            </div>
                        </div>

                        {/* CH·ªÆ K√ù HSM - 25% */}
                        <div className="signature-column">
                            <h3 className="signature-subtitle">CH·ªÆ K√ù HSM</h3>
                            <div className="signature-form">
                                <div className="form-group">
                                    <label>Nh√† cung c·∫•p</label>
                                    <OrganizationSelect
                                        organizations={providers}
                                        value={formData.hsmProvider}
                                        onChange={(provider) => handleInputChange('hsmProvider', provider?.id)}
                                        placeholder="Ch·ªçn nh√† cung c·∫•p"
                                        searchPlaceholder="T√¨m ki·∫øm nh√† cung c·∫•p..."
                                    />
                                </div>
                                <div className="form-group">
                                    <label>UUID</label>
                                    <SearchBar 
                                        placeholder="Nh·∫≠p UUID" 
                                        value={formData.hsmUuid} 
                                        onChange={(value) => handleInputChange('hsmUuid', value)} 
                                    />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div className="add-user-actions">
                <Button 
                    outlineColor="#6c757d" 
                    backgroundColor="transparent" 
                    text="H·ªßy b·ªè" 
                    onClick={handleCancel}
                />
                <Button 
                    outlineColor="#0B57D0" 
                    backgroundColor="#0B57D0" 
                    text="L∆∞u l·∫°i" 
                    onClick={handleSave}
                />
            </div>
        </div>
    );
};

export default AddNewUser;
